server {
        listen 52.90.123.127:80 ;
        server_name 52.90.123.127;
        return 301 $scheme://52.90.123.127$request_uri;
    }
    server {
        listen 80 default_server;
        server_name 52.90.123.127;
        root /var/www/web;
        # Logging Settings
        access_log /var/log/nginx/access.log combined;
        error_log /var/log/nginx/error.log warn;
        set_real_ip_from 10.0.0.0/16;
        set_real_ip_from 127.0.0.1/32;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;
        port_in_redirect on;
        server_name_in_redirect on;
        client_body_buffer_size 128k;
        client_max_body_size 20m;
        # Gzip Settings
        gzip on;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
        gzip_buffers 16 8k;
        gzip_disable "MSIE [1-6]\.(?!.*SV1)";
        error_page 404 /error;
        location / {
            # try to serve file directly, fallback to app.php
            try_files $uri /app.php$is_args$args;
        }
        location ~* \.(eot|ttf|woff)$ {
            add_header Access-Control-Allow-Origin *;
        }
        # pass the PHP scripts to FastCGI server from upstream phpfcgi
        location ~ ^/app\.php(/|$) {
            fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
	        fastcgi_split_path_info ^(.+\.php)(/.*)$;

            # set the HTTPS fastcgi_param based on our scheme or the X-Forwarded-Proto header
            set $our_https off;
            if ($scheme = "https" ) {
                set $our_https on;
            }
            if ($http_x_forwarded_proto = "https") {
                set $our_https on;
            }
            #Uncomment this on if behind a load balancer
            #if ($http_x_forwarded_proto != 'https') {
            #  return 301 https://$server_name$request_uri;
            #}
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS $our_https;
            fastcgi_param SYMFONY_ENV prod;
        }
        # turn off serving hidden files just in case any are left
        location ~ /\. {
            access_log off;
            log_not_found off;
            deny all;
        }
        location /status {
            allow 127.0.0.1;
            deny all;
        }
    }
